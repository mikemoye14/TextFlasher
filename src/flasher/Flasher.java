package flasher;

import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dizoo548
 */
public class Flasher extends javax.swing.JFrame {
    Timer timer;
    /**
     * Creates new form TextFlasher
     */
    public Flasher() {
        initComponents();
        init();
    }
    
    /**
     * Method init initializes frame
     */
    private void init() {
        this.setLocationRelativeTo(null);
        this.setTitle("Flasher");
        backgroundColorButton.setOpaque(true);
        changeTextButton.setOpaque(true);
        textLabel.setOpaque(true);
        try {
            Font nineTeenFortyTwo = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/resources/fonts/1942.ttf"));
            nineTeenFortyTwo = nineTeenFortyTwo.deriveFont(Font.BOLD, 48f);
            textLabel.setFont(nineTeenFortyTwo);
        } catch (Exception x) {
            //x.printStackTrace();
        }

    }
    
    private Color getOriginalColor(){
        
        Color bakColor = textLabel.getBackground();
        return bakColor;
    }
    
    private Color getComplemtaryColor(Color color){
        
           Color newColor = new Color(255-color.getRed(),
                                      255-color.getGreen(),
                                      255-color.getBlue()
                                      );
           
           return newColor;
    }   
    
    private void flash(){        
        
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() { 
                textLabel.setBackground(getComplemtaryColor(textLabel.getBackground()));
                textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
                textLabel.setBackground(getOriginalColor());
                textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
            }
        }, 500, 10);      
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textLabel = new javax.swing.JLabel();
        backgroundColorButton = new javax.swing.JLabel();
        flashButton = new javax.swing.JButton();
        changeTextButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textLabel.setBackground(new java.awt.Color(255, 255, 255));
        textLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textLabel.setText("Text");
        textLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        backgroundColorButton.setBackground(new java.awt.Color(0, 153, 0));
        backgroundColorButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundColorButton.setText("Background Color");
        backgroundColorButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        backgroundColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundColorButtonMousePressed(evt);
            }
        });

        flashButton.setText("Flash");
        flashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                flashButtonMousePressed(evt);
            }
        });

        changeTextButton.setBackground(new java.awt.Color(204, 0, 0));
        changeTextButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changeTextButton.setText("Change Text");
        changeTextButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        changeTextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                changeTextButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backgroundColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(changeTextButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flashButton)
                .addGap(169, 169, 169))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(backgroundColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(flashButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backgroundColorButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorButtonMousePressed
        try {
            Color color = JColorChooser.showDialog(this, "Backgroud Color", Color.PINK);
            this.textLabel.setBackground(new Color(color.getRGB()));
            textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
        } catch (HeadlessException | NullPointerException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_backgroundColorButtonMousePressed

    private void flashButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flashButtonMousePressed
        if(flashButton.getText().equalsIgnoreCase("Flash")){
            flash();
            flashButton.setText("STOP!");
        }else{
            timer.cancel();
            flashButton.setText("Flash");
        }
        
        
    }//GEN-LAST:event_flashButtonMousePressed

    private void changeTextButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTextButtonMousePressed
            try{
            java.net.URL imgURL = getClass().getResource("/resources/images/letters.png");

            Icon icon = new ImageIcon(imgURL);
            JTextField text = new JTextField(5);
            
            Object[] stuff = {"Enter desired text", text};
            int response;
            response = JOptionPane.showConfirmDialog(this, stuff, "Change Text", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, icon);

            if (response == JOptionPane.CANCEL_OPTION) {
            } else {
                if(!text.getText().equalsIgnoreCase("")){
                    textLabel.setText(text.getText());
                }
            }
        } catch (HeadlessException | NumberFormatException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_changeTextButtonMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Flasher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundColorButton;
    private javax.swing.JLabel changeTextButton;
    private javax.swing.JButton flashButton;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables
}
