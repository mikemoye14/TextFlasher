package flasher;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.HeadlessException;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.*;

/**
 * CMPSC 221 
 * GUI Assignments
 * Program 24.7
 * Text Flasher 
 * flasher.java 
 * Purpose: run the text flasher application
 * 
 * @author Mike Moye <mtm5313@psu.edu>
 * @version 2.0 18 March 2014
 *
 */
public class Flasher extends javax.swing.JFrame {
    private Timer timer;
    private int speed;
    private boolean flash;
    
    /**
     * Creates new form TextFlasher
     */
    public Flasher() {
        this.speed = 100;
        initComponents();
        init();
    }
    
    /**
     * Method init() initializes frame, sets font
     */
    private void init() {
        this.setLocationRelativeTo(null);
        this.setTitle("Flasher");
        backgroundColorButton.setOpaque(true);
        changeTextButton.setOpaque(true);
        textLabel.setOpaque(true);
        flash = false;
        try {
            Font nineTeenFortyTwo = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/resources/fonts/1942.ttf"));
            nineTeenFortyTwo = nineTeenFortyTwo.deriveFont(Font.BOLD, 48f);
            textLabel.setFont(nineTeenFortyTwo);
        } catch (Exception x) {
            //x.printStackTrace();
        }
    }
    
    /**
     * Method getOriginalColor() gets the original background of the flash area
     * @return balColor background color
     */
    private Color getOriginalColor(){        
        Color bakColor = textLabel.getBackground();
        return bakColor;
    }
    
    /**
     * Method getComplemtaryColor() get the complementary color of a given color
     * @param color color
     * @return complemented color
     */
    private Color getComplemtaryColor(Color color){        
           Color newColor = new Color(255-color.getRed(),
                                      255-color.getGreen(),
                                      255-color.getBlue()
                                      );           
           return newColor;    
    }   
    
    /**
     * Method flash() flashes text
     */
    private void flash(){
        timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() { 
                textLabel.setBackground(getComplemtaryColor(textLabel.getBackground()));
                textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
                textLabel.setBackground(getOriginalColor());
                textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
            }
        }, 100, speed);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textLabel = new javax.swing.JLabel();
        backgroundColorButton = new javax.swing.JLabel();
        flashButton = new javax.swing.JButton();
        changeTextButton = new javax.swing.JLabel();
        speedSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textLabel.setBackground(new java.awt.Color(255, 255, 255));
        textLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textLabel.setText("Text");
        textLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        backgroundColorButton.setBackground(new java.awt.Color(0, 153, 0));
        backgroundColorButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundColorButton.setText("Background Color");
        backgroundColorButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        backgroundColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backgroundColorButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backgroundColorButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundColorButtonMousePressed(evt);
            }
        });

        flashButton.setText("Flash");
        flashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                flashButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                flashButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                flashButtonMousePressed(evt);
            }
        });

        changeTextButton.setBackground(new java.awt.Color(204, 0, 0));
        changeTextButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changeTextButton.setText("Change Text");
        changeTextButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        changeTextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                changeTextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                changeTextButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                changeTextButtonMousePressed(evt);
            }
        });

        speedSlider.setMajorTickSpacing(100);
        speedSlider.setMaximum(500);
        speedSlider.setMinimum(50);
        speedSlider.setMinorTickSpacing(50);
        speedSlider.setPaintLabels(true);
        speedSlider.setPaintTicks(true);
        speedSlider.setSnapToTicks(true);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(speedSlider);
        jLabel1.setText("Speed");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("<html>&larr; FASTER</html>");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("<html>SLOWER &rarr;</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(flashButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(speedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backgroundColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(changeTextButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(backgroundColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(changeTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(flashButton)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Method backgroundColorButtonMousePressed() shows background color prompt
     * @param evt click bagroundColorButton
     */
    private void backgroundColorButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorButtonMousePressed
        try {
            Color color = JColorChooser.showDialog(this, "Background Color", Color.PINK);
            this.textLabel.setBackground(new Color(color.getRGB()));
            textLabel.setForeground(getComplemtaryColor(textLabel.getBackground()));
        } catch (HeadlessException | NullPointerException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_backgroundColorButtonMousePressed
    
    /**
     * Method flashButtonMousePressed()start or stop flashing text
     * @param evt 
     */
    private void flashButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flashButtonMousePressed
        if(flashButton.getText().equalsIgnoreCase("Flash")){
            flash();
            flashButton.setText("STOP!");
            flash = true;
        }else{
            timer.cancel();
            flashButton.setText("Flash");
            flash = false;
        }
    }//GEN-LAST:event_flashButtonMousePressed
    
    /**
     * Method changeTextButtonMousePressed() shows change text prompt
     * @param evt click change text button
     */
    private void changeTextButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTextButtonMousePressed
            try{
            java.net.URL imgURL = getClass().getResource("/resources/images/letters.png");

            Icon icon = new ImageIcon(imgURL);
            JTextField text = new JTextField(5);
            
            Object[] stuff = {"Enter desired text", text};
            int response;
            response = JOptionPane.showConfirmDialog(this, stuff, "Change Text", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, icon);

            if (response == JOptionPane.CANCEL_OPTION) {
            } else {
                if(!text.getText().equalsIgnoreCase("")){
                    textLabel.setText(text.getText());
                }
            }
        } catch (HeadlessException | NumberFormatException x) {
            //x.printStackTrace();
        }
    }//GEN-LAST:event_changeTextButtonMousePressed
    
    /**
     * Method speedSliderStateChanged() changes flash speed
     * @param evt move speed slider
     */
    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        speed = speedSlider.getValue();               
        if(flash){
           timer.cancel();
           flash();
        }
    }//GEN-LAST:event_speedSliderStateChanged
    
    /**
     * Method backgroundColorButtonMouseEntered() mouse pointer
     * @param evt mouse over background button
     */
    private void backgroundColorButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_backgroundColorButtonMouseEntered
    
    /**
     * Method backgroundColorButtonMouseExited() mouse pointer
     * @param evt mouse out background button
     */
    private void backgroundColorButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundColorButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_backgroundColorButtonMouseExited
    /**
     * Method changeTextButtonMouseEntered 
     * @param evt 
     */
    private void changeTextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTextButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_changeTextButtonMouseEntered
    /**
     * 
     * @param evt 
     */
    private void changeTextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeTextButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_changeTextButtonMouseExited
    
    /**
     * 
     * @param evt 
     */
    private void flashButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flashButtonMouseEntered
        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_flashButtonMouseEntered
    
    /**
     * 
     * @param evt 
     */
    private void flashButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flashButtonMouseExited
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_flashButtonMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flasher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Flasher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundColorButton;
    private javax.swing.JLabel changeTextButton;
    private javax.swing.JButton flashButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables
}
